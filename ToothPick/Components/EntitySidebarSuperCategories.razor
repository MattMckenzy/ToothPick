@if (Items.Any())
{
    string latestSuperCategory = Items.First().Key.SuperCategory;
    Dictionary<(string SuperCategory, string Category, string Key), string> latestItems = new();

    @foreach (KeyValuePair<(string SuperCategory, string Category, string Key), string> item in Items)
    {
        if (latestSuperCategory != item.Key.SuperCategory)
        {   
            @if (latestItems.Any())
            {                
                <EntitySidebarSuperCategory 
                    Items=@latestItems.ToDictionary() 
                    Title=@Title 
                    CurrentItem=@CurrentItem
                    DeleteCallback=@DeleteCallback 
                    DeleteTitle=@DeleteTitle 
                    LoadCallback=@LoadCallback />     
            }       

            latestItems.Clear();
            latestSuperCategory = item.Key.SuperCategory;
        }

        latestItems.Add(item.Key, item.Value);  
    }    

    @if (latestItems.Any())
    {             
        <EntitySidebarSuperCategory 
            Items=@latestItems.ToDictionary() 
            Title=@Title 
            CurrentItem=@CurrentItem
            DeleteCallback=@DeleteCallback 
            DeleteTitle=@DeleteTitle 
            LoadCallback=@LoadCallback />     
    }    
}

@code {
    [Parameter]
    public required Dictionary<(string SuperCategory, string Category, string Key), string> Items { get; set; } = null!;

    [Parameter]
    public required string Title { get; set; } = null!;

    [Parameter]
    public (string SuperCategory, string Category, string Key) CurrentItem { get; set; }

    [Parameter]
    public EventCallback<IEnumerable<(string SuperCategory, string Category, string Key)>> DeleteCallback { get; set; }

    [Parameter]
    public string DeleteTitle { get; set; } = string.Empty;

    [Parameter]
    public EventCallback<(string SuperCategory, string Category, string Key)> LoadCallback { get; set; }
}